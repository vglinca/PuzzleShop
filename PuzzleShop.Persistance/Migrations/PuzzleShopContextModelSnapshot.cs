// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PuzzleShop.Persistance.DbContext;

namespace PuzzleShop.Persistance.Migrations
{
    [DbContext(typeof(PuzzleShopContext))]
    partial class PuzzleShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PuzzleShop.Domain.Entities.DifficultyLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            LevelName = "Low"
                        },
                        new
                        {
                            Id = 2L,
                            LevelName = "Middle"
                        },
                        new
                        {
                            Id = 3L,
                            LevelName = "High"
                        });
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PuzzleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PuzzleId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FileName = "testfilename",
                            PuzzleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            FileName = "testfilename",
                            PuzzleId = 2L
                        });
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Gan"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "MoYu"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "QiYi"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Rubics"
                        });
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.PlasticColor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlasticColors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Color = "White"
                        },
                        new
                        {
                            Id = 2L,
                            Color = "Black"
                        },
                        new
                        {
                            Id = 3L,
                            Color = "Stickerless"
                        });
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.Puzzle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateWhenAdded")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DifficultyLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsWcaPuzzle")
                        .HasColumnType("bit");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PlasticColorId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PuzzleTypeId")
                        .HasColumnType("bigint");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyLevelId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("PlasticColorId");

                    b.HasIndex("PuzzleTypeId");

                    b.ToTable("Puzzles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateWhenAdded = new DateTimeOffset(new DateTime(2020, 3, 5, 23, 5, 55, 905, DateTimeKind.Unspecified).AddTicks(5918), new TimeSpan(0, 2, 0, 0, 0)),
                            DifficultyLevelId = 2L,
                            IsWcaPuzzle = true,
                            ManufacturerId = 1L,
                            Name = "Gan 356 X",
                            PlasticColorId = 3L,
                            PuzzleTypeId = 1L,
                            Weight = 350.0
                        },
                        new
                        {
                            Id = 2L,
                            DateWhenAdded = new DateTimeOffset(new DateTime(2020, 3, 5, 23, 5, 55, 908, DateTimeKind.Unspecified).AddTicks(4165), new TimeSpan(0, 2, 0, 0, 0)),
                            DifficultyLevelId = 2L,
                            IsWcaPuzzle = true,
                            ManufacturerId = 1L,
                            Name = "Gan 356 XS",
                            PlasticColorId = 1L,
                            PuzzleTypeId = 1L,
                            Weight = 330.0
                        },
                        new
                        {
                            Id = 3L,
                            DateWhenAdded = new DateTimeOffset(new DateTime(2020, 3, 5, 23, 5, 55, 908, DateTimeKind.Unspecified).AddTicks(4260), new TimeSpan(0, 2, 0, 0, 0)),
                            DifficultyLevelId = 2L,
                            IsWcaPuzzle = true,
                            ManufacturerId = 2L,
                            Name = "MoYu Weilong GTS 3M",
                            PlasticColorId = 3L,
                            PuzzleTypeId = 1L,
                            Weight = 345.0
                        });
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.PuzzleType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PuzzleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            TypeName = "3x3x3"
                        },
                        new
                        {
                            Id = 2L,
                            TypeName = "4x4x4"
                        },
                        new
                        {
                            Id = 3L,
                            TypeName = "5x5x5"
                        });
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.Image", b =>
                {
                    b.HasOne("PuzzleShop.Domain.Entities.Puzzle", "Puzzle")
                        .WithMany("Images")
                        .HasForeignKey("PuzzleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuzzleShop.Domain.Entities.Puzzle", b =>
                {
                    b.HasOne("PuzzleShop.Domain.Entities.DifficultyLevel", "DifficultyLevel")
                        .WithMany("Puzzles")
                        .HasForeignKey("DifficultyLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuzzleShop.Domain.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Puzzles")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuzzleShop.Domain.Entities.PlasticColor", "PlasticColor")
                        .WithMany("Puzzles")
                        .HasForeignKey("PlasticColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuzzleShop.Domain.Entities.PuzzleType", "PuzzleType")
                        .WithMany("Puzzles")
                        .HasForeignKey("PuzzleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

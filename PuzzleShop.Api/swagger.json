{
  "x-generator": "NSwag v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Autogenerated API info",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Colors": {
      "get": {
        "tags": [
          "Colors"
        ],
        "operationId": "Colors_GetColors",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Colors"
        ],
        "operationId": "Colors_AddColor",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "colorForCreateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ColorCreateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Colors/{colorId}": {
      "get": {
        "tags": [
          "Colors"
        ],
        "operationId": "Colors_GetColor",
        "parameters": [
          {
            "type": "integer",
            "name": "colorId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Colors"
        ],
        "operationId": "Colors_UpdateColor",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "colorId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "colorForUpdateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ColorCreateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Colors"
        ],
        "operationId": "Colors_DeleteColor",
        "parameters": [
          {
            "type": "integer",
            "name": "colorId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/puzzles/{puzzleId}/Images": {
      "get": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_GetImages",
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/puzzles/{puzzleId}/Images/AddImages": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_AddImages",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Id",
            "in": "formData",
            "format": "int64",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Title",
            "in": "formData",
            "x-nullable": false
          },
          {
            "type": "file",
            "name": "File",
            "in": "formData",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/puzzles/{puzzleId}/Images/DeleteImages": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_DeleteImages",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Lookup/difficultylevels": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "operationId": "Lookup_GetDifficultyLevels",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DifficultyLevelDto"
              }
            }
          }
        }
      }
    },
    "/api/Lookup/roles": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "operationId": "Lookup_GetRoles",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleDto"
              }
            }
          }
        }
      }
    },
    "/api/Lookup/orderstatuslist": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "operationId": "Lookup_GetOrderStatusList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderStatusDto"
              }
            }
          }
        }
      }
    },
    "/api/ManageOrders/ordersPaged": {
      "post": {
        "tags": [
          "ManageOrders"
        ],
        "operationId": "ManageOrders_GetOrdersPaged",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagedRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/ManageOrders/{orderId}": {
      "get": {
        "tags": [
          "ManageOrders"
        ],
        "operationId": "ManageOrders_GetOrder",
        "parameters": [
          {
            "type": "integer",
            "name": "orderId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/ManageOrders/orderStatus/{orderId}": {
      "put": {
        "tags": [
          "ManageOrders"
        ],
        "operationId": "ManageOrders_ChangeOrderStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "orderId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "statusDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderStatusForSettingDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Manufacturers": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "Manufacturers_GetManufacturers",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "Manufacturers_AddManufacturer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "manufacturerForCreateDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManufacturerForCreateDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Manufacturers/{manufacturerId}": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "Manufacturers_GetManufacturer",
        "parameters": [
          {
            "type": "integer",
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "Manufacturers_UpdateManufacturer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "manufacturerForUpdateDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManufacturerForUpdateDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "Manufacturers_DeleteManufacturer",
        "parameters": [
          {
            "type": "integer",
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/MaterialType": {
      "get": {
        "tags": [
          "MaterialType"
        ],
        "operationId": "MaterialType_GetMaterialTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MaterialTypeDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MaterialType"
        ],
        "operationId": "MaterialType_AddMaterialType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "materialTypeCreateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaterialTypeCreateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MaterialTypeDto"
            }
          }
        }
      }
    },
    "/api/MaterialType/{materialTypeId}": {
      "get": {
        "tags": [
          "MaterialType"
        ],
        "operationId": "MaterialType_GetMaterialType",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "materialTypeId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MaterialTypeDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MaterialType"
        ],
        "operationId": "MaterialType_DeleteMaterialType",
        "parameters": [
          {
            "type": "integer",
            "name": "materialTypeId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Orders/getCart/{userId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_GetCart",
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Orders/orders/{userId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_GetAllOrders",
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Orders/AddToCart": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_AddToCart",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "orderItemForCreationDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderItemForCreationDto"
            },
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "addedFromCollections",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Orders/confirmOrder/{userId}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_ConfirmOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "customerDetails",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInfoForOrderDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Orders/placeOrder/{userId}/{orderId}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_PlaceOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "orderId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "userData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInfoForOrderDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Orders/orderItem/{userId}/{itemId}": {
      "delete": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_RemoveOrderItem",
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "itemId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Puzzles/pagedPuzzles": {
      "post": {
        "tags": [
          "Puzzles"
        ],
        "operationId": "Puzzles_GetPuzzles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pagedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagedRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PuzzleTableRowDto"
              }
            }
          }
        }
      }
    },
    "/api/Puzzles/{puzzleId}": {
      "get": {
        "tags": [
          "Puzzles"
        ],
        "operationId": "Puzzles_GetPuzzle",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PuzzleDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Puzzles"
        ],
        "operationId": "Puzzles_UpdatePuzzle",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "puzzleForUpdateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PuzzleUpdateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Puzzles"
        ],
        "operationId": "Puzzles_DeletePuzzle",
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Puzzles/puzzleFriendly/{puzzleId}": {
      "get": {
        "tags": [
          "Puzzles"
        ],
        "operationId": "Puzzles_GetPuzzleFriendly",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PuzzleTableRowDto"
            }
          }
        }
      }
    },
    "/api/Puzzles": {
      "post": {
        "tags": [
          "Puzzles"
        ],
        "operationId": "Puzzles_AddPuzzle",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "formData",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Description",
            "in": "formData",
            "maxLength": 1500,
            "x-nullable": false
          },
          {
            "type": "number",
            "name": "Price",
            "in": "formData",
            "format": "decimal",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IsMagnetic",
            "in": "formData",
            "x-nullable": false
          },
          {
            "type": "number",
            "name": "Weight",
            "in": "formData",
            "format": "double",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "ManufacturerId",
            "in": "formData",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PuzzleTypeId",
            "in": "formData",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "ColorId",
            "in": "formData",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "MaterialTypeId",
            "in": "formData",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "AvailableInStock",
            "in": "formData",
            "x-nullable": false
          },
          {
            "type": "file",
            "name": "Images",
            "in": "formData",
            "collectionFormat": "multi",
            "x-nullable": false,
            "items": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PuzzleDto"
            }
          }
        }
      }
    },
    "/api/PuzzleTypes": {
      "get": {
        "tags": [
          "PuzzleTypes"
        ],
        "operationId": "PuzzleTypes_GetPuzzleTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PuzzleTypeTableRowDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PuzzleTypes"
        ],
        "operationId": "PuzzleTypes_AddPuzzleType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "puzzleTypeForCreationModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PuzzleTypeCreateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PuzzleTypeDto"
            }
          }
        }
      }
    },
    "/api/PuzzleTypes/{puzzleTypeId}": {
      "get": {
        "tags": [
          "PuzzleTypes"
        ],
        "operationId": "PuzzleTypes_GetPuzzleType",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleTypeId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PuzzleTypeDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PuzzleTypes"
        ],
        "operationId": "PuzzleTypes_UpdatePuzzleType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleTypeId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "puzzleTypeForUpdateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PuzzleTypeUpdateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PuzzleTypes"
        ],
        "operationId": "PuzzleTypes_DeletePuzzleType",
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleTypeId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/PuzzleTypes/puzzleTypeFriendly/{puzzleTypeId}": {
      "get": {
        "tags": [
          "PuzzleTypes"
        ],
        "operationId": "PuzzleTypes_GetPuzzleTypeFriendly",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleTypeId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PuzzleTypeTableRowDto"
            }
          }
        }
      }
    },
    "/api/{puzzleId}/Reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "operationId": "Reviews_GetReviews",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReviewDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "operationId": "Reviews_AddReview",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "puzzleId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "review",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewCreateModel"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Register",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "userForRegistrationDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserForRegistrationDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Auth/authenticate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Authenticate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "userForAuthDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserForAuthDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Logout",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Users/pagedUsers": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUsers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagedRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUser",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWithRolesDto"
            }
          }
        }
      }
    },
    "/api/Users/plainUser/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetPlainUser",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        }
      }
    },
    "/api/Users/profile/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_UpdateUserProfile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserForUpdateDto"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Users/manageroles/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_EditUserRoles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "roles",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ColorCreateModel": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "DifficultyLevelDto": {
      "type": "object",
      "required": [
        "difficultyLevelId",
        "title"
      ],
      "properties": {
        "difficultyLevelId": {
          "$ref": "#/definitions/DifficultyLevelId"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "DifficultyLevelId": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Low",
        "Medium",
        "High",
        "ExtraHigh"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "RoleDto": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OrderStatusDto": {
      "type": "object",
      "required": [
        "orderStatusId",
        "name"
      ],
      "properties": {
        "orderStatusId": {
          "$ref": "#/definitions/OrderStatusId"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OrderStatusId": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Pending",
        "AwaitingPayment",
        "ConfirmedPayment",
        "AwaitingShipment",
        "Completed",
        "Cancelled",
        "Declined",
        "Refunded"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "PagedRequest": {
      "type": "object",
      "required": [
        "orderBy",
        "orderByDirection",
        "pageNumber",
        "pageSize",
        "requestFilters"
      ],
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderByDirection": {
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "requestFilters": {
          "$ref": "#/definitions/RequestFilters"
        }
      }
    },
    "RequestFilters": {
      "type": "object",
      "required": [
        "operator",
        "filters"
      ],
      "properties": {
        "operator": {
          "$ref": "#/definitions/LogicalOperator"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        }
      }
    },
    "LogicalOperator": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "AND",
        "OR"
      ],
      "enum": [
        0,
        1
      ]
    },
    "Filter": {
      "type": "object",
      "required": [
        "propertyName",
        "propertyValue"
      ],
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        }
      }
    },
    "OrderStatusForSettingDto": {
      "type": "object",
      "required": [
        "statusId"
      ],
      "properties": {
        "statusId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManufacturerForCreateDto": {
      "type": "object",
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 1500
        }
      }
    },
    "ManufacturerForUpdateDto": {
      "type": "object",
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 1500,
          "minLength": 1
        }
      }
    },
    "MaterialTypeDto": {
      "type": "object",
      "required": [
        "id",
        "title"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MaterialTypeCreateModel": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "OrderItemForCreationDto": {
      "type": "object",
      "required": [
        "cost",
        "quantity",
        "puzzleId",
        "userId"
      ],
      "properties": {
        "cost": {
          "type": "number",
          "format": "decimal"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "puzzleId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CustomerInfoForOrderDto": {
      "type": "object",
      "required": [
        "contactEmail",
        "customerFirstName",
        "customerLastName",
        "address",
        "city",
        "country",
        "postalCode",
        "phone",
        "token"
      ],
      "properties": {
        "contactEmail": {
          "type": "string"
        },
        "customerFirstName": {
          "type": "string"
        },
        "customerLastName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "PuzzleTableRowDto": {
      "allOf": [
        {
          "$ref": "#/definitions/PuzzleBaseDto"
        },
        {
          "type": "object",
          "required": [
            "manufacturer",
            "puzzleType",
            "color",
            "materialType"
          ],
          "properties": {
            "manufacturer": {
              "type": "string"
            },
            "puzzleType": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "materialType": {
              "type": "string"
            }
          }
        }
      ]
    },
    "PuzzleBaseDto": {
      "type": "object",
      "x-abstract": true,
      "required": [
        "id",
        "name",
        "description",
        "price",
        "isMagnetic",
        "weight",
        "availableInStock",
        "images"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "decimal"
        },
        "isMagnetic": {
          "type": "boolean"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "rating": {
          "type": "number",
          "format": "double"
        },
        "availableInStock": {
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDto"
          }
        }
      }
    },
    "ImageDto": {
      "type": "object",
      "required": [
        "id",
        "title",
        "fileName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "PuzzleDto": {
      "allOf": [
        {
          "$ref": "#/definitions/PuzzleBaseDto"
        },
        {
          "type": "object",
          "required": [
            "manufacturerId",
            "puzzleTypeId",
            "colorId",
            "materialTypeId"
          ],
          "properties": {
            "manufacturerId": {
              "type": "integer",
              "format": "int64"
            },
            "puzzleTypeId": {
              "type": "integer",
              "format": "int64"
            },
            "colorId": {
              "type": "integer",
              "format": "int64"
            },
            "materialTypeId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "PuzzleUpdateModel": {
      "type": "object",
      "required": [
        "name",
        "description",
        "isMagnetic",
        "manufacturerId",
        "puzzleTypeId",
        "colorId",
        "weight",
        "materialTypeId",
        "availableInStock"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 1500,
          "minLength": 1
        },
        "isMagnetic": {
          "type": "boolean"
        },
        "manufacturerId": {
          "type": "integer",
          "format": "int64"
        },
        "puzzleTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "colorId": {
          "type": "integer",
          "format": "int64"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "materialTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "rating": {
          "type": "number",
          "format": "double"
        },
        "availableInStock": {
          "type": "integer"
        }
      }
    },
    "PuzzleTypeTableRowDto": {
      "type": "object",
      "required": [
        "id",
        "isRubicsCube",
        "isWca",
        "title",
        "difficultyLevel"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isRubicsCube": {
          "type": "boolean"
        },
        "isWca": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "difficultyLevel": {
          "type": "string"
        }
      }
    },
    "PuzzleTypeDto": {
      "type": "object",
      "required": [
        "id",
        "isRubicsCube",
        "isWca",
        "title",
        "difficultyLevelId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isRubicsCube": {
          "type": "boolean"
        },
        "isWca": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "difficultyLevelId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PuzzleTypeCreateModel": {
      "type": "object",
      "required": [
        "title",
        "isRubicsCube",
        "isWca",
        "difficultyLevelId"
      ],
      "properties": {
        "title": {
          "type": "string",
          "minLength": 1
        },
        "isRubicsCube": {
          "type": "boolean"
        },
        "isWca": {
          "type": "boolean"
        },
        "difficultyLevelId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PuzzleTypeUpdateModel": {
      "type": "object",
      "required": [
        "puzzleTypeId",
        "title",
        "isRubicsCube",
        "isWca",
        "difficultyLevelId"
      ],
      "properties": {
        "puzzleTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "minLength": 1
        },
        "isRubicsCube": {
          "type": "boolean"
        },
        "isWca": {
          "type": "boolean"
        },
        "difficultyLevelId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ReviewDto": {
      "type": "object",
      "required": [
        "id",
        "puzzleId",
        "reviewerName",
        "reviewerEmail",
        "reviewTitle",
        "reviewBody"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "puzzleId": {
          "type": "integer",
          "format": "int64"
        },
        "reviewerName": {
          "type": "string"
        },
        "reviewerEmail": {
          "type": "string"
        },
        "rating": {
          "type": "number",
          "format": "double"
        },
        "reviewTitle": {
          "type": "string"
        },
        "reviewBody": {
          "type": "string"
        }
      }
    },
    "ReviewCreateModel": {
      "type": "object",
      "required": [
        "reviewerName",
        "reviewerEmail",
        "reviewTitle",
        "reviewBody"
      ],
      "properties": {
        "reviewerName": {
          "type": "string",
          "minLength": 1
        },
        "reviewerEmail": {
          "type": "string",
          "format": "email"
        },
        "rating": {
          "type": "number",
          "format": "double"
        },
        "reviewTitle": {
          "type": "string",
          "maxLength": 100
        },
        "reviewBody": {
          "type": "string",
          "maxLength": 1500
        }
      }
    },
    "UserForRegistrationDto": {
      "type": "object",
      "required": [
        "userName",
        "firstName",
        "lastName",
        "password",
        "email",
        "birthDate"
      ],
      "properties": {
        "userName": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string",
          "minLength": 1
        },
        "lastName": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 8
        },
        "email": {
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "birthDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        }
      }
    },
    "UserForAuthDto": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserWithRolesDto": {
      "type": "object",
      "required": [
        "id",
        "userName",
        "firstName",
        "lastName",
        "email",
        "roles"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "age": {
          "type": "string",
          "format": "date-time"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserDto": {
      "type": "object",
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "birthDate"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserForUpdateDto": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "birthDate"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}